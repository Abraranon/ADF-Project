{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DEV-Environment-1212"
		},
		"LS_AdfStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AdfStorage'"
		},
		"LS_KV_Adfstorage_connection_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sec-rg-dev-blobstorage-connection"
		},
		"ls_kv_adfstorage1212_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://KV-RG-DEV-ENV.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Copy_People_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Act_Copy_Data_Activity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.Source_File_Path}//@{pipeline().parameters.Tgt_File_Name}"
							},
							{
								"name": "Destination",
								"value": "@{pipeline().parameters.Tgt_File_path}//@{pipeline().parameters.Tgt_File_Name}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "LS_AdfStorage",
									"type": "LinkedServiceReference"
								},
								"path": "log"
							},
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_AdfStorage",
										"type": "LinkedServiceReference"
									},
									"path": "log"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_People",
								"type": "DatasetReference",
								"parameters": {
									"source_path": {
										"value": "@pipeline().parameters.Source_File_Path",
										"type": "Expression"
									},
									"File_Name": {
										"value": "@pipeline().parameters.Tgt_File_Name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Tgt_DS_People",
								"type": "DatasetReference",
								"parameters": {
									"Target_File_Path": {
										"value": "@pipeline().parameters.Tgt_File_path",
										"type": "Expression"
									},
									"Target_File_Name": {
										"value": "@pipeline().parameters.Tgt_File_Name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Source_File_Path": {
						"type": "string"
					},
					"Source_File_Name": {
						"type": "string"
					},
					"Tgt_File_path": {
						"type": "string"
					},
					"Tgt_File_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-18T11:40:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_People')]",
				"[concat(variables('factoryId'), '/datasets/Tgt_DS_People')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AdfStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PL_DataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmpSource": {
										"source_path": "sources",
										"File_Name": "people-100.csv"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-20T17:08:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PL_DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Delete_Log_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_Delete_Logs_Activity",
						"description": "Delete Activity ",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "FilesDeleted",
								"value": "All old log files are deleted"
							}
						],
						"typeProperties": {
							"dataset": {
								"referenceName": "Log_Dir",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_AdfStorage",
									"type": "LinkedServiceReference"
								},
								"path": "targets"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-18T11:56:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Log_Dir')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AdfStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Execute_another_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_Param_vars",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Param_Variables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"PL_Param": {
									"value": "@pipeline().parameters.PL_input",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"PL_input": {
						"type": "array",
						"defaultValue": [
							"a",
							"b",
							"c",
							"d"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-19T16:16:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Param_Variables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Filter_Data_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.ListOfValues",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(item(),3 )",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ListOfValues": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5,
							6,
							7
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-19T16:54:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Lookup_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_People",
								"type": "DatasetReference",
								"parameters": {
									"source_path": "sources",
									"File_Name": "people-100.csv"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-20T11:02:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_People')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Param_Variables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach_iterator_from_PL_Parameter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Set_Variable_property",
								"value": "final retrieval of the variable"
							}
						],
						"typeProperties": {
							"variableName": "PL_Set_Var",
							"value": {
								"value": "@variables('PL_variable')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach_iterator_from_PL_Parameter",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [
							{
								"name": "About ForEach Iterator",
								"value": "Read Data from PL parameter and iterat over it"
							}
						],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.PL_Param",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PL_variable",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"PL_Param": {
						"type": "array",
						"defaultValue": [
							"a",
							"b",
							"c"
						]
					}
				},
				"variables": {
					"PL_variable": {
						"type": "Array"
					},
					"PL_Set_Var": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-19T15:58:23Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Switch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.in_Var",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "Set variable2",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "out_var",
												"value": {
													"value": "@pipeline().parameters.in_Var",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "out_var",
										"value": "0"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"in_Var": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"variables": {
					"out_var": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-19T18:48:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Validation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_People",
								"type": "DatasetReference",
								"parameters": {
									"source_path": "sources",
									"File_Name": "people-100.csv"
								}
							},
							"timeout": "0.12:00:00",
							"sleep": 10
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Validation1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Copy_People_Data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Source_File_Path": "sources",
								"Source_File_Name": "people-100.csv",
								"Tgt_File_path": "targets",
								"Tgt_File_Name": "people-100.csv"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-19T18:48:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_People')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Copy_People_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Web_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web_call_dummy_rest_api",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "URL Details ",
								"value": "Employee Data extracted from the "
							}
						],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"disableCertValidation": false,
							"turnOffAsync": false,
							"url": "https://dummy.restapiexample.com/api/v1/employees"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-19T17:55:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_until_getMdata_if_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_File_exsists",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('FileExsists'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get_File_Metadata",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_People",
											"type": "DatasetReference",
											"parameters": {
												"source_path": "sources",
												"File_Name": "people-100.csv"
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get_File_Metadata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(activity('Get_File_Metadata').output.exists)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "FileExsists",
													"value": "true"
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Until_File_exsists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Copy_People_Data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Source_File_Path": "sources",
								"Source_File_Name": "people-100.csv",
								"Tgt_File_path": "targets",
								"Tgt_File_Name": "people-100.csv"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FileExsists": {
						"type": "String",
						"defaultValue": "false"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-19T17:29:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Copy_People_Data')]",
				"[concat(variables('factoryId'), '/datasets/DS_People')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Orgnaization')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdfStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "organizations-100.csv",
						"container": "sources"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Organization Id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Website",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Founded",
						"type": "String"
					},
					{
						"name": "Industry",
						"type": "String"
					},
					{
						"name": "Number of employees",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdfStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_People')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdfStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"source_path": {
						"type": "string"
					},
					"File_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File_Name",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().source_path",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "User Id",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Sex",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "Date of birth",
						"type": "String"
					},
					{
						"name": "Job Title",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdfStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdfStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "emp_dm.csv",
						"container": "targets"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdfStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Log_Dir')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdfStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "log"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdfStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tgt_DS_People')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdfStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Target_File_Path": {
						"type": "string"
					},
					"Target_File_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Target_File_Name",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Target_File_Path",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdfStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AdfStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_AdfStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KV_Adfstorage_connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Blob storage connection using the key vault",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_kv_adfstorage1212",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_KV_Adfstorage_connection_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kv_adfstorage1212')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_kv_adfstorage1212')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_kv_adfstorage1212_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_People",
								"type": "DatasetReference"
							},
							"name": "EmpSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "LS_AdfStorage",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "selectEmpCols"
						},
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Index as string,",
						"          {User Id} as string,",
						"          {First Name} as string,",
						"          {Last Name} as string,",
						"          Sex as string,",
						"          Email as string,",
						"          Phone as string,",
						"          {Date of birth} as string,",
						"          {Job Title} as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     ignoreNoFilesFound: false) ~> EmpSource",
						"EmpSource select(mapColumn(",
						"          Index,",
						"          {User Id},",
						"          {First Name},",
						"          {Last Name},",
						"          Sex,",
						"          Email,",
						"          Phone,",
						"          {Date of birth},",
						"          {Job Title}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectEmpCols",
						"selectEmpCols, EmpSource join(selectEmpCols@Index == EmpSource@Index,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_People')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AdfStorage')]"
			]
		}
	]
}